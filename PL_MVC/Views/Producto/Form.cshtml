@model ML.Producto
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<script src="~/Scripts/bootstrap.js"></script>
<link href="~/Content/bootstrap.css" rel="stylesheet" />*@

<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h5>Producto</h5>
        </div>
    </div>



    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("Form", "Producto", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.IdProducto, new { @class = "hidden" })
                            @Html.TextBoxFor(model => model.IdProducto, new { @class = "form-control hidden" })
                            @Html.ValidationMessageFor(model => model.IdProducto)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Nombre)
                            @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Nombre)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Precio)
                            @Html.TextBoxFor(model => model.Precio, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Precio)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Stock)
                            @Html.TextBoxFor(model => model.Stock, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Stock)
                        </div>
                    </div>
                    <!-- Probando DropDownList-->
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Proveedor)
                            @Html.DropDownListFor(model => model.Proveedor.IdProveedor, new SelectList(Model.Proveedor.Proveedors, "IdProveedor", "Nombre"), "- Seleccione el Proveedor -", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Proveedor.IdProveedor)
                        </div>
                    </div>

                    @*<div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Departamento.Area)
                            @Html.DropDownListFor(model => model.Departamento.Area.IdArea, new SelectList(Model.Departamento.Area.Areas, "IdArea", "Nombre"), "- Seleccione el area -", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Departamento.Area.IdArea)
                        </div>
                    </div>
                   
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Departamento)
                            @Html.DropDownListFor(model => model.Departamento.IdDepartamento, new SelectList(Model.Departamento.Departamentos, "IdDepartamento", "Nombre"), "- Seleccione el Departamento -", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Departamento.IdDepartamento)
                        </div>
                    </div>*@


                    <!--DropDownList on Cascade-->
                    <div class="form-group">
                        @*Drop Down List Area*@
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Departamento.Area, new { @class = "control-label" })
                            @if (Model.Departamento.Area.Areas == null)
                            {
                                @**@
                                @Html.DropDownListFor(model => model.Departamento.Area.IdArea, new SelectList(string.Empty, "Value", "Text"),
                                        "- Selecciona una Area-", htmlAttributes: new { id = "Area", @class = "form-control" })
                            }
                            else
                            {
                                @Html.DropDownListFor(model => model.Departamento.Area.IdArea, new SelectList(Model.Departamento.Area.Areas, "IdArea",
                                                "Nombre"), "- Seleccione una Area -", htmlAttributes: new { id = "Area", @class = "form-control" })
                            }
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Departamento, new { @class = "control-label" })
                            @if (Model.Departamento == null)
                            {
                                @Html.DropDownListFor(model => model.Departamento.IdDepartamento, new SelectList(string.Empty, "Value", "Text"),
                                "- Selecciona un Departamento -", htmlAttributes: new { id = "Departamento", @class = "form-control" })
                            }
                            else
                            {
                                @Html.DropDownListFor(model => model.Departamento.IdDepartamento, new SelectList(Model.Departamento.Departamentos, "IdDepartamento",
                               "Nombre"), "- Selecciona un Departamento -", htmlAttributes: new { id = "Departamento", @class = "form-control" })
                            }
                        </div>
                    </div>

                    <!--End-->

                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Descripcion)
                            @Html.TextBoxFor(model => model.Descripcion, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Descripcion)
                        </div>
                    </div>

                    <!-- Input de la imagen-->
                    <div class="form-group">
                        @Html.LabelFor(model => model.Imagen)
                        <input type="file" class="form-control" name="ImagenInput" onchange="readURL(this)" />
                        @if (Model.Imagen != null)
                        {

                            <img id="prevImage" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.Imagen)" width="100" height="100" />
                        }
                        else
                        {
                            <img id="prevImage" src="~/Content/sinImagen.jpg" style=" height:150px; width:150px;" />
                        }
                        @Html.ValidationMessageFor(model => model.Imagen)
                    </div>
                    @Html.HiddenFor(model => model.Imagen)
                    <script>
                        function readURL(input) {
                            if (input.files && input.files[0]) {
                                var reader = new FileReader();

                                reader.onload = function (e) {
                                    $('#prevImage').attr('src', e.target.result);
                                };
                                reader.readAsDataURL(input.files[0]);
                            }
                        }
                    </script>
                    <br />
                    <div class="form-group">
                        <div class="col-md-3">
                            <input type="submit" value="Guardar" class="btn btn-success" />
                            @Html.ActionLink("Regresar", "GetAll", "Producto", htmlAttributes: new { @class = "btn btn-danger" })
                        </div>
                    </div>
                    
                </div>             
            }
        </div>
    </div>
</div>


@Scripts.Render("~/bundles/jquery")
<script type="text/javascript">
    $(document).ready(function () {
        $("#Area").change(function () {
            $("#Departamento").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetDepartamento")',
                dataType: 'json',
                data: { IdArea: $("#Area").val() },
                success: function (departamentos) {
                    $.each(departamentos, function (i, departamentos) {
                        $("#Departamento").append('<option value = "' + departamentos.Value + '"> ' + departamentos.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex)
                }
            });
        });
    })
</script>