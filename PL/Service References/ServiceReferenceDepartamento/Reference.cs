//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PL.ServiceReferenceDepartamento {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceDepartamento.IServiceDepartamento")]
    public interface IServiceDepartamento {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDepartamento/Add", ReplyAction="http://tempuri.org/IServiceDepartamento/AddResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SL_WCF.Result))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Exception))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Area))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Departamento))]
        SL_WCF.Result Add(ML.Departamento departamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDepartamento/Add", ReplyAction="http://tempuri.org/IServiceDepartamento/AddResponse")]
        System.Threading.Tasks.Task<SL_WCF.Result> AddAsync(ML.Departamento departamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDepartamento/Update", ReplyAction="http://tempuri.org/IServiceDepartamento/UpdateResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SL_WCF.Result))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Exception))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Area))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Departamento))]
        SL_WCF.Result Update(ML.Departamento departamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDepartamento/Update", ReplyAction="http://tempuri.org/IServiceDepartamento/UpdateResponse")]
        System.Threading.Tasks.Task<SL_WCF.Result> UpdateAsync(ML.Departamento departamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDepartamento/Delete", ReplyAction="http://tempuri.org/IServiceDepartamento/DeleteResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SL_WCF.Result))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Exception))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Area))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Departamento))]
        SL_WCF.Result Delete(ML.Departamento departamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDepartamento/Delete", ReplyAction="http://tempuri.org/IServiceDepartamento/DeleteResponse")]
        System.Threading.Tasks.Task<SL_WCF.Result> DeleteAsync(ML.Departamento departamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDepartamento/GetAll", ReplyAction="http://tempuri.org/IServiceDepartamento/GetAllResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SL_WCF.Result))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Exception))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Area))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Departamento))]
        SL_WCF.Result GetAll(ML.Departamento departamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDepartamento/GetAll", ReplyAction="http://tempuri.org/IServiceDepartamento/GetAllResponse")]
        System.Threading.Tasks.Task<SL_WCF.Result> GetAllAsync(ML.Departamento departamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDepartamento/GetById", ReplyAction="http://tempuri.org/IServiceDepartamento/GetByIdResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SL_WCF.Result))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Exception))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Area))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Departamento))]
        SL_WCF.Result GetById(ML.Departamento departamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDepartamento/GetById", ReplyAction="http://tempuri.org/IServiceDepartamento/GetByIdResponse")]
        System.Threading.Tasks.Task<SL_WCF.Result> GetByIdAsync(ML.Departamento departamento);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceDepartamentoChannel : PL.ServiceReferenceDepartamento.IServiceDepartamento, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceDepartamentoClient : System.ServiceModel.ClientBase<PL.ServiceReferenceDepartamento.IServiceDepartamento>, PL.ServiceReferenceDepartamento.IServiceDepartamento {
        
        public ServiceDepartamentoClient() {
        }
        
        public ServiceDepartamentoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceDepartamentoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceDepartamentoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceDepartamentoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SL_WCF.Result Add(ML.Departamento departamento) {
            return base.Channel.Add(departamento);
        }
        
        public System.Threading.Tasks.Task<SL_WCF.Result> AddAsync(ML.Departamento departamento) {
            return base.Channel.AddAsync(departamento);
        }
        
        public SL_WCF.Result Update(ML.Departamento departamento) {
            return base.Channel.Update(departamento);
        }
        
        public System.Threading.Tasks.Task<SL_WCF.Result> UpdateAsync(ML.Departamento departamento) {
            return base.Channel.UpdateAsync(departamento);
        }
        
        public SL_WCF.Result Delete(ML.Departamento departamento) {
            return base.Channel.Delete(departamento);
        }
        
        public System.Threading.Tasks.Task<SL_WCF.Result> DeleteAsync(ML.Departamento departamento) {
            return base.Channel.DeleteAsync(departamento);
        }
        
        public SL_WCF.Result GetAll(ML.Departamento departamento) {
            return base.Channel.GetAll(departamento);
        }
        
        public System.Threading.Tasks.Task<SL_WCF.Result> GetAllAsync(ML.Departamento departamento) {
            return base.Channel.GetAllAsync(departamento);
        }
        
        public SL_WCF.Result GetById(ML.Departamento departamento) {
            return base.Channel.GetById(departamento);
        }
        
        public System.Threading.Tasks.Task<SL_WCF.Result> GetByIdAsync(ML.Departamento departamento) {
            return base.Channel.GetByIdAsync(departamento);
        }
    }
}
